// insert a node at the tail, way1
#include <iostream>
using namespace std;

// Node class to create linked list nodes
class Node
{
public:
    int data;   // Data stored in the node
    Node *next; // Pointer to the next node

    // Constructor to initialize a node with given data
    Node(int data)
    {
        this->data = data;
        this->next = NULL; // Initializing the next pointer to NULL
    }
};

// Function to insert a new node at the end of the linked list
void insertAtTail(Node *&head, int val)
{
    Node *newNode = new Node(val); // Creating a new node with the given value
    if (head == NULL)
    {
        // If the list is empty, set the new node as the head
        head = newNode;
    }
    else
    {
        // Traverse to the end of the list and add the new node there
        Node *tmp = head;
        while (tmp->next != NULL)
        {
            tmp = tmp->next;
        }
        tmp->next = newNode;
    }
}

// Function to display the linked list
void display(Node *head)
{
    Node *tmp = head; // Temporary pointer to traverse the list
    while (tmp != NULL)
    {
        cout << tmp->data << "->"; // Display node's data
        tmp = tmp->next;           // Move to the next node
    }
    cout << "NULL" << endl; // Indicate the end of the list
}

int main()
{
    Node *head = NULL; // Initializing an empty linked list

    // Inserting nodes at the end of the linked list
    insertAtTail(head, 1);
    insertAtTail(head, 2);
    insertAtTail(head, 3);

    // Displaying the linked list
    display(head);

    return 0;
}
