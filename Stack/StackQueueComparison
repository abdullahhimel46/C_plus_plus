// StackQueueComparison

/*
Take a stack of size N and a queue of size M as input. Then check if both of them
are the same or not in the order of removing.

Sample Input
5
10 20 30 40 50
5
10 20 30 40 50
Sample Output
NO

Sample Input
5
10 20 30 40 50
4
10 20 30 40
Sample Output
NO

Sample Input
5
10 20 30 40 50
5
50 40 30 20 10
Sample Output
YES

*/

#include <bits/stdc++.h>
using namespace std;
int main()
{
    stack<int> s;
    queue<int> q;

    int m, n;

    cin >> m;
    while (m--)
    {
        int x;
        cin >> x;
        s.push(x);
    }

    cin >> n;
    while (n--)
    {
        int x;
        cin >> x;
        q.push(x);
    }

    if (s.size() != q.size())
    {
        cout << "NO" << endl;
        return 0;
    }

    bool flag = true;
    while (!s.empty() && !q.empty())
    {
        if (s.top() != q.front())
        {
            flag = false;
            break;
        }
        s.pop();
        q.pop();
    }

    if (flag)
        cout << "YES" << endl;
    else
        cout << "NO" << endl;
    return 0;
}
