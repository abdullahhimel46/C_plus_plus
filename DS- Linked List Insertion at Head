// Linked List Insertion at Head

#include <bits/stdc++.h>
using namespace std;

// Node class to represent elements in a linked list
class Node
{
public:
    int data;   // Data of the node
    Node *next; // Pointer to the next node

    // Constructor to initialize a node with given data
    Node(int data)
    {
        this->data = data; // Set the data of the node
        this->next = NULL; // Initialize the next pointer to NULL
    }
};

// Function to insert a node at the head of the linked list
void inser_at_head(Node *&head, int val)
{
    Node *newNode = new Node(val); // Create a new node with the given value

    // If the linked list is empty, set the new node as the head and return
    if (head == NULL)
    {
        head = newNode;
        return;
    }

    newNode->next = head; // Point the new node to the current head
    head = newNode;       // Set the new node as the new head
}

// Function to display the data of each node in the linked list
void display_at_position(Node *head)
{
    Node *tmp = head;
    // Traverse the list and print the data of each node
    while (tmp != NULL)
    {
        cout << tmp->data << " "; // Display the data of the current node
        tmp = tmp->next;          // Move to the next node
    }
}

int main()
{
    Node *head = NULL; // Initialize an empty linked list

    // Insert nodes with values 10, 20, and 30 at the head of the linked list
    inser_at_head(head, 10);
    inser_at_head(head, 20);
    inser_at_head(head, 30);

    cout << "Linked list after insertion at the head: ";
    display_at_position(head);
    return 0;
}
