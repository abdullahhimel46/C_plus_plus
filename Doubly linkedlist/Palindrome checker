// Palindrome checker
#include <bits/stdc++.h>
using namespace std;

class Node
{
public:
    int data;
    Node *next;
    Node *prev;
    Node(int data)
    {
        this->data = data;
        this->next = NULL;
        this->prev = NULL;
    }
};

void insertAtTail(Node *&head, Node *&tail, int val)
{
    Node *newNode = new Node(val);
    if (head == NULL)
    {
        head = newNode;
        tail = newNode;
        return;
    }
    tail->next = newNode;
    newNode->prev = tail;
    tail = newNode;
}

void display(Node *head)
{
    Node *tmp = head;
    while (tmp != NULL)
    {
        cout << tmp->data << " ";
        tmp = tmp->next;
    }
}

void swapList(Node *head, Node *tail)
{
    Node *i = head;
    Node *j = tail;
    bool found = true;
    while (i != j && i->next != j)
    {
        if (i->data != j->data)
        {
            found = false;
        }
        i = i->next;
        j = j->prev;
    }
    // for even number of nodes
    if (i->data != j->data)
    {
        found = false;
    }

    if (found)
        cout << "YES";
    else
        cout << "NO";
}

int main()
{
    Node *head1 = NULL;
    Node *tail1 = NULL;
    // Node *head2 = NULL;
    // Node *tail2 = NULL;

    int val;
    while (cin >> val && val != -1)
    {
        insertAtTail(head1, tail1, val);
    }
    // while (cin >> val && val != -1)
    // {
    //     insertAtTail(head2, tail2, val);
    // }
    swapList(head1, tail1);
    // display(head1);

    return 0;
}
