// BinarySearchCheckElement
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin >> n;

    int a[n]; // Input array elements
    for (int i = 0; i < n; i++)
        cin >> a[i];

    int x;
    cin >> x; // Input the element to be searched

    int l = 0;     // Leftmost index of the search range
    int r = n - 1; // Rightmost index of the search range

    bool flag = false; // Flag to track whether x is found or not

    // Binary search algorithm
    while (l <= r) // as l<r for always
    /*When l becomes greater than r, it means that the search space has become empty
     or invalid, and the loop will exit.*/
    {
        int mid_index = (l + r) / 2; // Calculate the mid index of the search range

        if (x == a[mid_index])
        // If the element is found at mid_index
        {
            flag = true; // Set flag to true to indicate x is found
            break;       // Exit the loop as the element is found
        }
        else if (x > a[mid_index])
        {
            // If x is greater, search in the right half
            //>move left
            l = mid_index + 1; // Move the left boundary to mid_index + 1
        }
        else if (x < a[mid_index])
        {
            // If x is smaller, search in the left half
            //<move right
            r = mid_index - 1; // Move the right boundary to mid_index - 1
        }
    }

    // Output whether x is found or not
    if (flag == true)
        cout << "YES" << endl; // x is found
    else
        cout << "NO" << endl; // x is not found

    return 0;
}

/*
Sample input:
5
1 2 3 4 5
3
Sample output:
YES

*/
