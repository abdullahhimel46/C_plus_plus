/*
Problem Statement

Given a string S containing just the characters 0 and 1, determine if the
input string is valid.

An input string is valid if the string is empty after doing some operatios.

The available operations are:
a. 0 can delete its previous available character 1 along with itself. Simply it means,
top='0' && c='1'. Now pop the top!
b. 1 can delete its previous available character 0 along with itself.Simply it means,
top='1' && c='0'. Now pop the top!
N.B> In both cases, the stack shouldn't be empty!!

Sample Input 0
10
0011
1010
1100
0101
0001
0111
0110
100101
1110010
0001011011

Sample Output 0
YES
YES
YES
YES
NO
NO
YES
YES
NO
YES
*/

#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin >> n;
    while (n--)
    {
        stack<char> st;
        string s;
        cin >> s;
        for (char c : s)
        {
            // 0 can delete its previous available character 1
            if (!st.empty() && st.top() == '0' && c == '1')
            {
                // pop operation will remove an element from the top of the stack
                st.pop(); // pop 0
            }
            // 1 can delete its previous available character 0
            else if (!st.empty() && st.top() == '1' && c == '0')
            {
                // pop operation will remove an element from the top of the stack
                st.pop(); // pop 1
            }
            else
            {
                st.push(c);
            }
        }
        if (st.empty())
            cout << "YES" << endl;
        else
            cout << "NO" << endl;
    }

    return 0;
}
